---
- hosts: servers
  vars_files:
    - vars.yml
    # - @vault.yml
  gather_facts: true
  become: true
  become_user: "{{ project_name }}"
  roles:
    - common
  tasks:

  - name: Set up the mailto
    cronvar:
      name: MAILTO
      value: "{{ cron_email }}"
      user: "{{ project_name }}"

  - cron:
      name: "Create CSVs"
      minute: "15,45"
      job: "nice -n 19 ionice -c 3 output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py candidates_create_csv --site-base-url https://candidates.democracyclub.org.uk"

  - cron:
      name: "Detect faces"
      minute: "30,04,19"
      job: "nice -n 19 ionice -c 3 output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py moderation_queue_detect_faces_in_queued_images"
      disabled: no
    when: deploy_env == "production"

  - cron:
      name: "Import elections from EE"
      minute: "06"
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py uk_create_elections_from_every_election"

  - cron:
      name: "Update Twitter usernames"
      minute: "06"
      hour: "01"
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py twitterbot_update_usernames"
    when: deploy_env == "production"

  - cron:
      name: "Update parties from EC"
      minute: "06"
      hour: "02"
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py parties_import_from_ec --post-to-slack"

  - cron:
      name: "Add Twitter images to image queue"
      minute: "06"
      hour: "03"
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py twitterbot_add_images_to_queue"
    when: deploy_env == "production"

  - cron:
      name: "Build static person pages"
      minute: "10"
      hour: 1 # For non-election times
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py candidates_cache_api_to_directory --url-prefix https://static-candidates.democracyclub.org.uk/media/cached-api --prune"
    when: deploy_env == "production"
  - cron:
      name: "Update current candidates for party"
      minute: "10"
      hour: 2 # For non-election times
      job: "output-on-error {{project_root}}/env/bin/python {{project_root}}/code/manage.py parties_update_current_candidates"
