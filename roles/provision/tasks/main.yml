---


- name: Install required system packages.
  apt:
    pkg: "{{ item }}"
    state: latest
    update-cache: yes
    cache_valid_time: 43200
  with_items: "{{ system_packages }}"

- name: Upgrade all packages
  apt:
    upgrade: safe
    update-cache: yes
    cache_valid_time: 43200

- name: Create the project directory.
  file:
    path: "{{ project_root }}"
    state: directory
    # group: "{{ project_name }}"
    # owner: "{{ project_name }}"
    mode: 0755

- name: Create user.
  user:
    home: "{{ project_root }}/home"
    name: "{{ project_name }}"
    state: present

- name: Set the owner of the project dir
  file:
    path: "{{ project_root }}"
    state: directory
    group: "{{ project_name }}"
    owner: "{{ project_name }}"
    mode: 0755

- name: Create the code directory.
  file:
    path: "{{ project_root }}/code/"
    state: directory
    group: "{{ project_name }}"
    owner: "{{ project_name }}"
    mode: 0755

- name: Set up handy bashrc file
  lineinfile:
    dest: "{{ project_root }}/home/.bashrc"
    line: 'cd && cd ../code && source ../env/bin/activate'

- name: Install required Python packages.
  pip:
    name: "{{ item }}"
    state: latest
  with_items: "{{ python_packages }}"

- name: Install gunicorn
  pip:
    name: "gunicorn"
    virtualenv: "{{ project_root }}/env/"
  become_user: "{{ project_name }}"

- name: Install python2 psycopg2
  pip:
    name: "psycopg2"
    executable: "pip3"

- name: Install output on error
  template:
    src: files/scripts/output-on-error
    dest: /usr/bin/output-on-error
    mode: 0777

- name: Install htpasswd file
  template:
    src: files/conf/htpasswd
    dest: "{{ project_root }}/.htpasswd"
  notify: restart nginx

# - name: Install nginx configuration file.
#   template: src=files/conf/nginx.conf dest=/etc/nginx/nginx.conf
#   notify: restart nginx

- name: Install nginx app configuration file.
  template: src=files/conf/nginx_ynr.conf dest=/etc/nginx/sites-enabled/{{ project_name }}
  notify: restart nginx

- name: Install nginx refirects file.
  template: src=files/conf/nginx_redirects.conf dest=/etc/nginx/{{ project_name }}_redirects.conf
  notify: restart nginx

- name: Increase map_hash_bucket_size
  lineinfile:
    dest: /etc/nginx/nginx.conf
    insertafter: "sendfile on;"
    line: "\tmap_hash_bucket_size 512;"
    state: present
    backup: yes
  notify: restart nginx


- name: Remove default nginx config
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default

- name: Install nginx mime.types
  template: src=files/conf/mime.types dest=/etc/nginx/mime.types
  notify: "restart nginx"

- name: Validate Nginx config
  become: yes
  command: nginx -t
  changed_when: false

- name: Install systemd init scripts.
  template:
    src: files/systemd/{{ item }}.service
    dest: /etc/systemd/system/{{ project_name }}_{{ item }}.service
  with_items: "{{ initfiles }}"
  notify:
    - reload systemd
    - "restart web frontend"
